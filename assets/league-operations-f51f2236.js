import{k as c,r as m,o as x,g as i,u as d,l as g,m as l}from"./index-c055e0ee.js";import{u as k,t as h}from"./check-authentication-actions-4a89d40e.js";const v=t=>c.get("http://localhost:3000/api/leagues",{headers:{Authorization:`Bearer ${t}`}}).then(e=>e.data).then(e=>e.data),L=({token:t,leagueId:e})=>c.get(`http://localhost:3000/api/leagues/${e}`,{headers:{Authorization:`Bearer ${t}`}}).then(s=>s.data).then(s=>s.data),f=({token:t,body:e})=>c.post("http://localhost:3000/api/leagues",e,{headers:{Authorization:`Bearer ${t}`}}).then(s=>s.data),S=({token:t,leagueId:e,body:s})=>c.patch(`http://localhost:3000/api/leagues/${e}`,s,{headers:{Authorization:`Bearer ${t}`}}).then(r=>r.data),T=({token:t,leagueId:e})=>c.delete(`http://localhost:3000/api/leagues/${e}`,{headers:{Authorization:`Bearer ${t}`}}).then(s=>s.data),y=()=>{const t=m.useContext(x);if(!t)throw new Error("useLeagueContext must be used inside an LeagueContextProvider");return t},$=()=>{const{setStatus:t}=i(),{state:{token:e},dispatch:s}=d(),r=g();return k({queryKey:"leagues",queryFn:()=>v(e),refetchOnWindowFocus:!1,onError:o=>{var n;const a=(n=o.response)==null?void 0:n.data;(a.error==="Token expired"||a.error==="Token error")&&h({navigate:r,dispatch:s}),t({activeMessage:!0,message:a.error,kind:"error"})}})},F=t=>{const{reset:e}=y(),{state:{token:s},dispatch:r}=d(),{setStatus:o}=i(),a=g();return k({queryKey:["league-administration",t],queryFn:()=>L({token:s,leagueId:t}),onSuccess:({name:n,logo:u,currentChampion:p})=>{e({name:n,logo:u,currentChampion:p})},onError:n=>{var p;const u=(p=n.response)==null?void 0:p.data;(u.error==="Token expired"||u.error==="Token error")&&h({navigate:a,dispatch:r}),o({activeMessage:!0,message:u.error,kind:"error"})}})},C=()=>{const{dispatch:t}=d(),{setStatus:e}=i(),s=g();return l({mutationFn:f,onSuccess:({data:r})=>{e({activeMessage:!0,message:r,kind:"success"})},onError:(r,{body:{name:o}})=>{var n;const a=(n=r.response)==null?void 0:n.data;(a.error==="Token expired"||a.error==="Token error")&&h({navigate:s,dispatch:t}),a.error.includes("E11000")&&(a.error=`${o} already exists`),e({activeMessage:!0,message:a.error,kind:"error"})}})},A=()=>{const{dispatch:t}=d(),{setStatus:e}=i(),s=g();return l({mutationFn:S,onSuccess:({data:r})=>{e({activeMessage:!0,message:r,kind:"success"})},onError:r=>{var a;const o=(a=r.response)==null?void 0:a.data;(o.error==="Token expired"||o.error==="Token error")&&h({navigate:s,dispatch:t}),e({activeMessage:!0,message:o.error,kind:"error"})}})},z=()=>{const{dispatch:t}=d(),{setStatus:e}=i(),s=g();return l({mutationFn:T,onSuccess:({data:r})=>{e({activeMessage:!0,message:r,kind:"success"})},onError:r=>{var a;const o=(a=r.response)==null?void 0:a.data;(o.error==="Token expired"||o.error==="Token error")&&h({navigate:s,dispatch:t}),e({activeMessage:!0,message:o.error,kind:"error"})}})};export{z as a,F as b,A as c,C as d,y as e,$ as u};
